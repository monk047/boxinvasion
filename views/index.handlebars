 <h3 class="page-header text-center">Connect the dots and capture a Box!</h3>
<p class="text-center">Welcome {{title}}</p>


 <div class="container container-margin" style="max-width: 1400px;">
        <div class="row chat-window col-xs-4 col-md-4" id="chat_window" style="margin-left:-50px;">
            <!--<div class="col-xs-12 col-md-12">-->
               <div class="panel">



               </div>
        </div>


    <!--</div>-->
     <div class="row col-xs-4 col-md-4" id="game_area" style="margin-left:-12px;">
        <canvas id="canvas"></canvas>
          <!--<script src="./models/UI.js"><{{!}}/script>-->
          <script>
           var canvas = document.querySelector('canvas');
           //Canvas Dimension
           var cnvW = 500+20;
           var cnvH = 500+20;
           //Setting Canvas Dimensions
           canvas.width = cnvW;
           canvas.height = cnvH;
           //Context variable
           var c = canvas.getContext('2d');
           /***************************************************/
           //Array of the objects
           //var board [11][11];
           /***************************************************/
           //RENDER DOTS
           var dotX =0;
           var dotY =0;
           var dotHeight = 20;
           var dotWidth = 20;
           //DOT COLOR
           c.fillStyle ='#469280';// 'rgba(27, 71, 142,0.75)';

           // varaibles
           var numberOfDots = 6;
           var cellWidth = 100;

           //Loop to render the dots
           for (var i = dotX; i < numberOfDots; i++) {
              for (var j = dotY; j < numberOfDots; j++) {
              c.fillRect(i*cellWidth, j*cellWidth, dotWidth, dotHeight);
              }
           }


           var HorizontalArrayLineStatus = [ [],[],[],[],[] ]; // Horizontal array
           var VerticalArrayLineStatus = [ [],[],[],[],[] ]; // Vertical array

           var canvas = document.getElementById("canvas");
           var count = 0;
           canvas.addEventListener('click', getPosition , false);

           function getPosition(event)
           {
               x = event.offsetX || event.layerX ;
               y = event.offsetY || event.layerY ;

               IsHorizontal(x,y);
               IsVertical(x,y);

              // alert("x: " + x + "  y: " + y);
           }


           function IsHorizontal(x ,y)
           {
               c.font = "bold 18px Slab serif";
               //c.fontWeight(20);
               var RectX = 20;
               var RectY =20;
               var RectWidth = 80;
               var RectHeight =80;
               var PlayerNoRectX = 52;
               var PlayerNoRectY =63;

               var IsBoxCompleted =false;
               var HorizontalLineNumber = Math.floor(x / 100);
               var VerticalLineNumber = Math.floor(y / 100);
               var XVal = x % 100;
               var YVal = y % 100;
               if( (XVal > 20 && XVal < 100)  && (YVal > 0  && YVal < 20) )
               {
                    //alert("H: " + HorizontalLineNumber + ", V: " + VerticalLineNumber );
                    //alert(HorizontalArrayLineStatus[HorizontalLineNumber][VerticalLineNumber + 1] +
                    //" , " + VerticalArrayLineStatus[VerticalLineNumber][HorizontalLineNumber] + " , " + VerticalArrayLineStatus[VerticalLineNumber][HorizontalLineNumber + 1]);
                    if(HorizontalArrayLineStatus[HorizontalLineNumber][VerticalLineNumber] == "Filled") {
                        alert("line is already drawn");
                        return;
                    }
                    if(HorizontalArrayLineStatus[HorizontalLineNumber][VerticalLineNumber + 1] == "Filled" &&
                                VerticalArrayLineStatus[VerticalLineNumber][HorizontalLineNumber] == "Filled" &&
                                    VerticalArrayLineStatus[VerticalLineNumber][HorizontalLineNumber + 1] == "Filled" )
                    {
                        IsBoxCompleted = true;
                        if(count%2 == 0)
                        {
                            c.fillStyle = 'rgba(0, 0, 0, 1.0)';//'#131a67';
                            c.fillText('P1',PlayerNoRectX + (HorizontalLineNumber * 100) ,PlayerNoRectY + ((VerticalLineNumber) *100));
                            c.fillStyle = 'rgba(255, 0, 0, .4)';//'#131a67';
                        }
                        else
                        {
                            c.fillStyle = 'rgba(0, 0, 0, 1.0)';//'#131a67';
                            c.fillText('P2', PlayerNoRectX + (HorizontalLineNumber * 100) ,PlayerNoRectY + ((VerticalLineNumber) *100));
                            c.fillStyle = 'rgba(0, 0, 255, .4)';//'#131a67';
                        }

                        c.fillRect(RectX + ( HorizontalLineNumber * 100),RectY + (VerticalLineNumber *100)  , RectWidth, RectHeight);
                        //alert("Box Completed case 1");

                    }
                    if(HorizontalArrayLineStatus[HorizontalLineNumber][VerticalLineNumber - 1] == "Filled" &&
                            VerticalArrayLineStatus[VerticalLineNumber - 1][HorizontalLineNumber + 1] == "Filled" &&
                            VerticalArrayLineStatus[VerticalLineNumber - 1][HorizontalLineNumber] == "Filled" )
                    {
                        IsBoxCompleted = true;
                        if(count%2 == 0)
                        {
                            c.fillStyle = 'rgba(0, 0, 0, 1.0)';//'#131a67';

                            c.fillText('P1',PlayerNoRectX + (HorizontalLineNumber * 100) ,PlayerNoRectY + ((VerticalLineNumber -1) *100));
                            c.fillStyle = 'rgba(255, 0, 0, .4)';//'#131a67';
                        }
                        else
                        {
                            c.fillStyle = 'rgba(0, 0, 0, 1.0)';//'#131a67';

                            c.fillText('P2', PlayerNoRectX + (HorizontalLineNumber * 100) ,PlayerNoRectY + ((VerticalLineNumber -1) *100));
                            c.fillStyle = 'rgba(0, 0, 255, .4)';//'#131a67';
                        }

                        c.fillRect(RectX + (HorizontalLineNumber * 100),RectY + ((VerticalLineNumber -1) *100) , RectWidth, RectHeight);
                        //alert("Box Completed case 2");
                    }
                    if(!IsBoxCompleted )
                    {
                       // alert("count incremented");
                        count++;
                    }

                   // alert("Horizontal -- Horizontal line no : " +HorizontalLineNumber + " Vertical line no: " + VerticalLineNumber);
                   var hLineX = 20;
                   var hLineY = 0;
                   var hLineW = 80;
                   var hLineH = 20;


                   PopulateArray(HorizontalLineNumber , VerticalLineNumber ,true); //true is for Horizontal
                   //drawing the Line
                   c.fillStyle = '#1d5a67';//'rgba(250, 144, 33,0.7)';
                   c.fillRect((HorizontalLineNumber*cellWidth)+hLineX,(VerticalLineNumber*cellWidth)+hLineY, hLineW, hLineH);
           }
           return ;
           }

           function IsVertical(x ,y)
           {
               c.font = "bold 18px Slab serif";
               var RectX = 20;
               var RectY =20;
               var RectWidth = 80;
               var RectHeight =80;
               var PlayerNoRectX = 52;
               var PlayerNoRectY =63;

               var IsBoxCompleted =false;
               var HorizontalLineNumber = Math.floor(x / 100);
               var VerticalLineNumber = Math.floor(y / 100);
               var XVal = x % 100;
               var YVal = y % 100;
               if( (XVal > 0 && XVal < 20)  && (YVal > 20  && YVal < 100) )
               {
                   //alert( "V: " + VerticalLineNumber + ", H: " + HorizontalLineNumber );
                   //alert(VerticalArrayLineStatus[VerticalLineNumber][HorizontalLineNumber + 1] + " , " +  HorizontalArrayLineStatus[VerticalLineNumber][HorizontalLineNumber]+
                    //      " , " + HorizontalArrayLineStatus[HorizontalLineNumber][VerticalLineNumber + 1] );
                  // alert(ArrForStoringTurnStatus[HorizontalLineNumber][VerticalLineNumber]);
                   if(VerticalArrayLineStatus[VerticalLineNumber][HorizontalLineNumber] == "Filled") {
                       alert("line is already drawn");
                       return;
                   }

                   if(VerticalArrayLineStatus[VerticalLineNumber][HorizontalLineNumber + 1] == "Filled" &&
                           HorizontalArrayLineStatus[HorizontalLineNumber][VerticalLineNumber] == "Filled" &&
                           HorizontalArrayLineStatus[HorizontalLineNumber][VerticalLineNumber + 1] == "Filled" )
                   {
                       IsBoxCompleted = true;
                       if(count%2 == 0)
                       {
                           c.fillStyle = 'rgba(0, 0, 0, 1.0)';//'#131a67';

                           c.fillText('P1',PlayerNoRectX + (HorizontalLineNumber * 100) ,PlayerNoRectY + ((VerticalLineNumber) *100));
                           c.fillStyle = 'rgba(255, 0, 0, .4)';//'#131a67';
                       }
                       else
                       {
                           c.fillStyle = 'rgba(0, 0, 0, 1.0)';//'#131a67';

                           c.fillText('P2', PlayerNoRectX + (HorizontalLineNumber * 100) ,PlayerNoRectY + ((VerticalLineNumber) *100));
                           c.fillStyle = 'rgba(0, 0, 255, .4)';//'#131a67';
                       }
                      // c.fillStyle = 'rgba(255, 0, 0, .4)';//'#131a67';
                       c.fillRect(RectX + ( HorizontalLineNumber * 100),RectY + (VerticalLineNumber *100)  , RectWidth, RectHeight);

                       //alert("Box Completed case 1");
                   }
                   if(VerticalArrayLineStatus[VerticalLineNumber][HorizontalLineNumber - 1] == "Filled" &&
                           HorizontalArrayLineStatus[HorizontalLineNumber - 1 ][VerticalLineNumber ] == "Filled" &&
                           HorizontalArrayLineStatus[HorizontalLineNumber - 1][VerticalLineNumber + 1] == "Filled" )
                   {
                       IsBoxCompleted = true;
                       if(count%2 == 0)
                       {
                           c.fillStyle = 'rgba(0, 0, 0, 1.0)';//'#131a67';

                           c.fillText('P1',PlayerNoRectX + ( (HorizontalLineNumber - 1) * 100) ,PlayerNoRectY + (VerticalLineNumber*100));
                           c.fillStyle = 'rgba(255, 0, 0, .4)';//'#131a67';
                       }
                       else
                       {
                           c.fillStyle = 'rgba(0, 0, 0, 1.0)';//'#131a67';

                           c.fillText('P2',PlayerNoRectX + ( (HorizontalLineNumber - 1) * 100) ,PlayerNoRectY + (VerticalLineNumber*100));
                           c.fillStyle = 'rgba(0, 0, 255, .4)';//'#131a67';
                       }
                       //c.fillStyle = 'rgba(255, 0, 0, .4)';//'#131a67';
                       c.fillRect(RectX + ( (HorizontalLineNumber - 1) * 100),RectY + ((VerticalLineNumber) *100) , RectWidth, RectHeight);
                       //alert("Box Completed case 2");
                   }
                   if(!IsBoxCompleted)
                   {
                       //alert("count incremented");
                       count++;
                   }

                   // alert("Horizontal -- Horizontal line no : " +HorizontalLineNumber + " Vertical line no: " + VerticalLineNumber);
                   var vLineX = 0;
                   var vLineY = 20;
                   var vLineW = 20;
                   var vLineH = 80;

                   PopulateArray(VerticalLineNumber,HorizontalLineNumber ,false); //false is for Vertical
                   //drawing the Line
                   c.fillStyle = '#1d5a67';//'rgba(250, 144, 33,0.7)';
                   c.fillRect((HorizontalLineNumber*cellWidth)+vLineX,(VerticalLineNumber*cellWidth)+vLineY, vLineW, vLineH);
               }
           return ;
           }

           function PopulateArray(FirstIndex , SecondIndex , isHorizontal)
           {

               if(isHorizontal){

                   HorizontalArrayLineStatus[FirstIndex][SecondIndex] = 'Filled';
               }
               else{

                   VerticalArrayLineStatus[FirstIndex][SecondIndex] = 'Filled';
               }

               //alert(count);
           }
           // HTMLCanvasElement.prototype.getPosition = getPosition;
          </script>
     </div>
     <div class="row right-panel col-xs-4 col-md-4" id="right_panel_1" style="margin-right:-50px;">
        <div class="panel sub-right-panel col-xs-4 col-md-4" id="game_options" >

        </div>
         <div class="panel sub-right-panel col-xs-4 col-md-4" id="player_stats">

         </div>
         <div class="panel sub-right-panel col-xs-4 col-md-4" id="game_messages">

         </div>
     </div>
</div>